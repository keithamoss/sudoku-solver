/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package sudsolv;

/**
 *
 * @author Neil
 */
public class SudokuGames
{

/**
 * This is a Sudoku Games class. It provides 8 initial 
 * Sudoku games, with Games 0 - 4 classified as very easy,
 * and games 5 -7 classified as easy.
 * 
 * @author Nick 
 * @version v0  09/10/2008
 */    
     public static int [] [] [] game = {
                    // Game 0 VE - DEFAULT
                    {{5,3,0,0,7,0,0,0,0},
                     {6,0,0,1,9,5,0,0,0},
                     {0,9,8,0,0,0,0,6,0},
                     {8,0,0,0,6,0,0,0,3},
                     {4,0,0,8,0,3,0,0,1},
                     {7,0,0,0,2,0,0,0,6},
                     {0,6,0,0,0,0,2,8,0},
                     {0,0,0,4,1,9,0,0,5},
                     {0,0,0,0,8,0,0,7,9}},
                    // Game 1 VE
                    {{8,0,1,0,3,7,0,5,6},  
                     {0,0,0,9,0,0,0,0,7},
                     {6,0,3,0,1,2,0,9,0},
                     {0,2,0,0,0,0,7,0,3},
                     {3,0,0,0,2,0,0,0,9},
                     {1,0,9,0,0,0,0,8,0},
                     {0,3,0,2,7,0,4,0,1},
                     {7,0,0,0,0,6,0,0,0},
                     {5,6,0,1,9,0,3,0,8}},
                    // Game 2 VE
                    {{0,9,0,0,3,0,1,4,0},  
                     {7,0,3,0,0,4,0,0,8},
                     {5,0,0,6,0,7,0,2,0},
                     {0,7,4,5,0,2,9,0,0},
                     {1,0,0,0,0,0,0,0,2},
                     {0,0,9,1,0,8,4,6,0},
                     {0,5,0,7,0,9,0,0,6},
                     {4,0,0,2,0,0,5,0,1},
                     {0,8,6,0,5,0,0,7,0}},
                    // Game 3 VE
                    {{0,0,9,7,3,0,5,2,6},  
                     {0,0,5,0,2,0,8,0,0},
                     {6,0,8,0,0,0,0,4,7},
                     {0,0,0,0,0,9,0,6,2},
                     {0,4,0,6,0,3,0,8,0},
                     {8,9,0,5,0,0,0,0,0},
                     {2,6,0,0,0,0,1,0,8},
                     {0,0,7,0,1,0,6,0,0},
                     {9,5,1,0,6,4,2,0,0}},
                    // Game 4 VE
                    {{7,8,1,0,0,4,0,0,6},  
                     {2,0,9,3,6,0,1,0,0},
                     {6,0,0,0,9,0,8,0,0},
                     {0,0,0,0,3,5,0,0,0},
                     {3,5,0,0,0,0,0,1,9},
                     {0,0,0,4,2,0,0,0,0},
                     {0,0,3,0,1,0,0,0,8},
                     {0,0,7,0,8,3,4,0,1},
                     {9,0,0,6,0,0,5,7,3}},                     
                    // Game 5 E
                    {{0,0,0,9,1,0,0,0,2},   
                     {5,0,0,0,0,0,0,0,0},
                     {3,0,0,5,4,0,0,6,8},
                     {0,4,2,7,0,0,3,0,5},
                     {0,0,3,4,5,6,2,0,0},
                     {1,0,9,0,0,8,7,4,0},
                     {8,1,0,0,7,5,0,0,4},
                     {0,0,0,0,0,0,0,0,1},
                     {9,0,0,0,8,4,0,0,0}},
                    // Game 6 E
                    {{0,0,0,1,0,7,0,9,0},  
                     {0,0,0,4,9,0,3,0,0},
                     {6,0,0,0,3,0,4,1,0},
                     {4,0,5,0,0,0,0,3,0},
                     {8,2,0,0,0,0,0,5,4},
                     {0,3,0,0,0,0,2,0,6},
                     {0,1,4,0,7,0,0,0,5},
                     {0,0,8,0,2,5,0,0,0},
                     {0,6,0,8,0,1,0,0,0}},                       
                    // Game 7 E
                    {{0,0,2,8,0,7,5,0,0},
                     {6,0,0,0,0,0,0,0,4},
                     {0,8,0,0,6,0,0,7,0},
                     {1,3,0,4,0,9,0,2,5},
                     {0,0,0,0,0,0,0,0,0},
                     {4,5,0,7,0,1,0,6,8},
                     {0,6,0,0,3,0,0,9,0},
                     {5,0,0,0,0,0,0,0,7},
                     {0,0,1,6,0,4,2,0,0}}
                   };  //End   
 
/** 
 * 
 * getGame(int gameID) returns a a Sudoku game as int [][] 
 *  as specified by the gameID. If the gameID is outside the 
 *  list of possible games, null is returned.
 *  
 */
     
    public static int [][] getGame (int gameID)
    {

      if(gameID >= 0 && gameID < game.length) return game[gameID];
      else return null;
      
    }
}
